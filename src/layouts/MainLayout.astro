---
import type {MDXLayoutProps} from "astro";
export interface Props {
    title: string;
}

const {title, frontmatter,} = Astro.props as MDXLayoutProps<Props>;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8"/>
    <meta name="viewport" content="width=device-width"/>
    <title>Dodo franchise</title>
    <meta name="description" content="Dodo franchise meta description">
    <link rel="icon" type="image/svg+xml" href="/favicon.svg"/>
    <meta name="generator" content={Astro.generator}/>
    <meta name="format-detection" content="telephone=no">

    <title>{title}</title>
    <script>
        const millisToMinutesAndSeconds = (millis) => {
            const minutes = Math.floor(millis / 60000);
            const seconds = ((millis % 60000) / 1000).toFixed(0);
            return minutes + ":" + (seconds < 10 ? '0' : '') + seconds;
        }
        const startMark = performance.mark("load-started");
        console.log(startMark);
        const tStart = performance.now();

        window.addEventListener("DOMContentLoaded", () => {
            const endMark = performance.mark("load-finished");
            console.log(endMark);
            const tEnd = performance.now();

            const result = performance.measure('load-content', "load-started", "load-finished")
            console.log(result)

            console.log("loaded", millisToMinutesAndSeconds(tEnd - tStart));
        })

        window.addEventListener("DOMContentLoaded", () => {
            const videosList = document.querySelectorAll('video');
            videosList.forEach((video) => {
                video.play();
            })
        })
    </script>
</head>
<body>
<div>
    <slot/>
</div>
</body>
</html>
